generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clients {
  id           BigInt   @id @default(autoincrement())
  name         String   @db.VarChar(255)
  last_name    String   @db.VarChar(255)
  email        String   @unique
  password     String
  is_active    Boolean  @default(false)
  phone_number String?  @db.VarChar(28)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
}

model product_types {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  products   products[]
}

model products {
  id                    BigInt                @id @default(autoincrement())
  code                  String                @db.VarChar(100)
  title                 String                @db.VarChar(255)
  technical_description String?
  long_description      String?
  price                 Decimal               @db.Decimal(10, 2)
  discounted_price      Decimal?              @db.Decimal(10, 2)
  is_discounted         Boolean               @default(false)
  type_id               Int
  stock                 Int
  is_active             Boolean               @default(false)
  created_at            DateTime              @default(now()) @db.Timestamp(6)
  updated_at            DateTime              @default(now()) @db.Timestamp(6)
  brand_id              Int
  slug                  String                @unique @db.VarChar(255)
  brands                brands                @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_brand")
  product_types         product_types         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products_categories   products_categories[]
}

model brands {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  products   products[]
}

model categories {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  parent_category_id  Int?
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  categories          categories?           @relation("categoriesTocategories", fields: [parent_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_categories    categories[]          @relation("categoriesTocategories")
  products_categories products_categories[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model products_categories {
  product_id  BigInt
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products    products   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([product_id, category_id], map: "pk_products_categories")
}

model users {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  last_name    String   @db.VarChar(255)
  email        String
  username     String   @unique @db.VarChar(255)
  password     String
  is_active    Boolean  @default(false)
  phone_number String?  @db.VarChar(28)
  role         String   @db.VarChar(15)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)

  @@ignore
}
